[package]
name = "half-earth-engine"
version = "0.1.0"
authors = ["{{authors}}"]
edition = "2018"

[lib]
bench = false
crate-type = ["cdylib", "rlib"]

[features]
default = ["console_error_panic_hook"]

[dependencies]
paste = "1.0"
rand = { version = "0.8", features = ["small_rng"] }
wasm-bindgen = "0.2.63"
serde-wasm-bindgen = "0.3.1"
serde = { version = "1.0", features = ["derive"] }
good_lp = { git = "https://github.com/frnsys/good_lp", features = ["minilp"], default-features = false }
getrandom = { version = "0.2", features = ["js"] }

# The `console_error_panic_hook` crate provides better debugging of panics by
# logging them with `console.error`. This is great for development, but requires
# all the `std::fmt` and `std::panicking` infrastructure, so isn't great for
# code size when deploying.
console_error_panic_hook = { version = "0.1.6", optional = true }

# `wee_alloc` is a tiny allocator for wasm that is only ~1K in code size
# compared to the default allocator's ~10K. It is slower than the default
# allocator, however.
#
# Unfortunately, `wee_alloc` requires nightly Rust when targeting wasm for now.
wee_alloc = { version = "0.4.5", optional = true }

[dev-dependencies]
float-cmp = "0.9"
wasm-bindgen-test = "0.3.13"
criterion = "0.3"
image = "0.23.14" # for reading pngs in tests/benchmarks

# for game calibration simulation
csv = "1.1"
serde_json = "1.0"
hector-rs = { path = "../../hector-rs" }
indicatif = "0.16.2"

[profile.release]
# Tell `rustc` to optimize for small code size.
opt-level = "s"
lto = "fat"
codegen-units = 1
panic = "abort"

[[bench]]
name = "surface"
harness = false
